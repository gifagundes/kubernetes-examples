apiVersion: v1
kind: Secret
metadata:
  name: dcr-secret
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJnZmFndW5kZXMiLCJwYXNzd29yZCI6IjZlOWQyNDI1LWJhYmItNGUxMC1hMWUxLWQzZjk0Zjc1ZjEyZCIsImVtYWlsIjoiZW1haWxAZXhhbXBsZS5jb20iLCJhdXRoIjoiWjJaaFozVnVaR1Z6T2pabE9XUXlOREkxTFdKaFltSXROR1V4TUMxaE1XVXhMV1F6WmprMFpqYzFaakV5WkE9PSJ9fX0=
  # docker-server: 
  # docker-username: Z2ZhZ3VuZGVz
  # docker-password: 6e9d2425-babb-4e10-a1e1-d3f94f75f12d
  # docker-email: ZW1haWxAZ21haWwuY29t

# Podemos criar com esse comando e depois recuperar a string para criar esse arquivo
#kubectl create secret docker-registry dcr-secret  --docker-username=gfagundes --docker-password=6e9d2425-babb-4e10-a1e1-d3f94f75f12d --docker-email=email@example.com

# Verificar o conteudo da chave criada
#kubectl get secret dcr-secret --output=yaml

# Decodificar o segredo
#kubectl get secret dcr-secret --output="jsonpath={.data.\.dockerconfigjson}" | base64 --decode

# Decodificar no linux
#echo "eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJnZmFndW5kZXMiLCJwYXNzd29yZCI6IjZlOWQyNDI1LWJhYmItNGUxMC1hMWUxLWQzZjk0Zjc1ZjEyZCIsImVtYWlsIjoiZW1haWxAZXhhbXBsZS5jb20iLCJhdXRoIjoiWjJaaFozVnVaR1Z6T2pabE9XUXlOREkxTFdKaFltSXROR1V4TUMxaE1XVXhMV1F6WmprMFpqYzFaakV5WkE9PSJ9fX0=" | base64 --decode